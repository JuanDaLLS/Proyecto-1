class Registro:
    def __init__(self, **kwargs):
        self.__nombre = kwargs.get('nombre')
        self.__edad = kwargs.get('edad')
        self.__carne = kwargs.get('carne')
        self.__correo = kwargs.get('correo')
        self.__tipo = kwargs.get('tipo')
    
    def mostrar_info(self):
        return f"Nombre: {self.__nombre}, Edad: {self.__edad}, Carné: {self.__carne}, Correo: {self.__correo}, Tipo: {self.__tipo}"

class SistemaRegistro:
    def __init__(self):
        self.usuarios = []
        self.carnets_registrados = set()
    
    def registrar_nuevo_usuario(self):
        print("\n--- REGISTRAR NUEVO USUARIO ---")
        
        # Solicitar carné
        while True:
            nuevoCarne = input("Ingrese el carné: ").strip()
            if nuevoCarne in self.carnets_registrados:
                print(f" Carnet {nuevoCarne} ya existe. Intente con otro.")
            else:
                break
        
        # Solicitar nombre
        nuevoNombre = input("Ingrese el nombre: ").strip()
        if not nuevoNombre:
            print("El nombre no puede estar vacío.")
            return
        
        # Solicitar edad
        while True:
            try:
                nuevoEdad = int(input("Ingrese la edad: ").strip())
                if nuevoEdad <= 0:
                    print(" La edad debe ser mayor a 0.")
                    continue
                break
            except ValueError:
                print(" Edad inválida. Intente de nuevo.")
        
        # Solicitar correo
        while True:
            nuevoCorreo = input("Ingrese el correo: ").strip()
            if "@" not in nuevoCorreo:
                print("El correo debe contener '@'. Intente de nuevo.")
            else:
                break
        
        
        while True:
            nuevoTipo = input("Ingrese el tipo de Miembro (profesor/estudiante): ").strip().lower()
            if nuevoTipo in ["profesor", "estudiante"]:
                break
            else:
                print("Tipo no válido. Debe ser 'profesor' o 'estudiante'.")
        

        nuevo_usuario = Registro(
            nombre=nuevoNombre,
            edad=nuevoEdad,
            carne=nuevoCarne,
            correo=nuevoCorreo,
            tipo=nuevoTipo
        )
        
        self.usuarios.append(nuevo_usuario)
        self.carnets_registrados.add(nuevoCarne)
        print(f"Usuario {nuevoNombre} registrado exitosamente!")
    
    def mostrar_todos_usuarios(self):
        print("\n--- LISTA DE USUARIOS REGISTRADOS ---")
        if not self.usuarios:
            print("No hay usuarios registrados.")
            return
        
        for i, usuario in enumerate(self.usuarios, 1):
            print(f"{i}. {usuario.mostrar_info()}")
        print(f"Total: {len(self.usuarios)} usuarios")
    
    def menu_principal(self):
        while True:
            print("="*50)
            print("SISTEMA DE REGISTRO DE USUARIOS")
            print("="*50)
            print("1. Registrar nuevo usuario")
            print("2. Ver todos los usuarios")
            print("3. Salir")
            print("="*50)
            
            opcion = input("Seleccione una opción (1-3): ").strip()
            
            if opcion == "1":
                self.registrar_nuevo_usuario()
            elif opcion == "2":
                self.mostrar_todos_usuarios()
            elif opcion == "3":
                print("bai")
                break
            else:
                print("Opción no válida. Intente de nuevo.")

sistema = SistemaRegistro()
sistema.menu_principal()
